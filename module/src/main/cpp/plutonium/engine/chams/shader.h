const char *shader = "Shader \"chams\"\n"
                     "{\n"
                     "    Properties\n"
                     "  {\n"
                     "    _LineColor (\"LineColor\", Color) = (1,1,1,1)\n"
                     "    _FillColor (\"FillColor\", Color) = (0,0,0,0)\n"
                     "    _WireThickness (\"Wire Thickness\", RANGE(0, 800)) = 100\n"
                     "    [MaterialToggle] UseDiscard(\"Discard Fill\", Float) = 1\n"
                     " }\n"
                     "\n"
                     "  SubShader\n"
                     "  {\n"
                     "    Tags { \"RenderType\"=\"Opaque\" }\n"
                     "    Pass\n"
                     "    {\n"
                     "      CGPROGRAM\n"
                     "      #pragma vertex vert\n"
                     "      #pragma geometry geom\n"
                     "      #pragma fragment frag\n"
                     "      #pragma multi_compile _ USEDISCARD_ON\n"
                     "      #include \"UnityCG.cginc\"\n"
                     "      float _WireThickness;\n"
                     "      struct appdata\n"
                     "      {\n"
                     "        float4 vertex : POSITION;\n"
                     "      };\n"
                     "      struct v2g\n"
                     "      {\n"
                     "        float4 projectionSpaceVertex : SV_POSITION;\n"
                     "        float4 worldSpacePosition : TEXCOORD1;\n"
                     "      };\n"
                     "      struct g2f\n"
                     "      {\n"
                     "        float4 projectionSpaceVertex : SV_POSITION;\n"
                     "        float4 worldSpacePosition : TEXCOORD0;\n"
                     "        float4 dist : TEXCOORD1;\n"
                     "      };\n"
                     "      v2g vert (appdata v)\n"
                     "      {\n"
                     "        v2g o;\n"
                     "        o.projectionSpaceVertex = UnityObjectToClipPos(v.vertex);\n"
                     "        o.worldSpacePosition = mul(unity_ObjectToWorld, v.vertex);\n"
                     "        return o;\n"
                     "      }\n"
                     "      \n"
                     "      [maxvertexcount(3)]\n"
                     "      void geom(triangle v2g i[3], inout TriangleStream<g2f> triangleStream)\n"
                     "      {\n"
                     "        float2 p0 = i[0].projectionSpaceVertex.xy / i[0].projectionSpaceVertex.w;\n"
                     "        float2 p1 = i[1].projectionSpaceVertex.xy / i[1].projectionSpaceVertex.w;\n"
                     "        float2 p2 = i[2].projectionSpaceVertex.xy / i[2].projectionSpaceVertex.w;\n"
                     "\n"
                     "        float2 edge0 = p2 - p1;\n"
                     "        float2 edge1 = p2 - p0;\n"
                     "        float2 edge2 = p1 - p0;\n"
                     "\n"
                     "        // To find the distance to the opposite edge, we take the\n"
                     "        // formula for finding the area of a triangle Area = Base/2 * Height, \n"
                     "        // and solve for the Height = (Area * 2)/Base.\n"
                     "        // We can get the area of a triangle by taking its cross product\n"
                     "        // divided by 2.  However we can avoid dividing our area/base by 2\n"
                     "        // since our cross product will already be double our area.\n"
                     "        float area = abs(edge1.x * edge2.y - edge1.y * edge2.x);\n"
                     "        float wireThickness = 800 - _WireThickness;\n"
                     "\n"
                     "        g2f o;\n"
                     "        o.worldSpacePosition = i[0].worldSpacePosition;\n"
                     "        o.projectionSpaceVertex = i[0].projectionSpaceVertex;\n"
                     "        o.dist.xyz = float3( (area / length(edge0)), 0.0, 0.0) * o.projectionSpaceVertex.w * wireThickness;\n"
                     "        o.dist.w = 1.0 / o.projectionSpaceVertex.w;\n"
                     "        triangleStream.Append(o);\n"
                     "\n"
                     "        o.worldSpacePosition = i[1].worldSpacePosition;\n"
                     "        o.projectionSpaceVertex = i[1].projectionSpaceVertex;\n"
                     "        o.dist.xyz = float3(0.0, (area / length(edge1)), 0.0) * o.projectionSpaceVertex.w * wireThickness;\n"
                     "        o.dist.w = 1.0 / o.projectionSpaceVertex.w;\n"
                     "        triangleStream.Append(o);\n"
                     "\n"
                     "        o.worldSpacePosition = i[2].worldSpacePosition;\n"
                     "        o.projectionSpaceVertex = i[2].projectionSpaceVertex;\n"
                     "        o.dist.xyz = float3(0.0, 0.0, (area / length(edge2))) * o.projectionSpaceVertex.w * wireThickness;\n"
                     "        o.dist.w = 1.0 / o.projectionSpaceVertex.w;\n"
                     "        triangleStream.Append(o);\n"
                     "      }\n"
                     "      uniform fixed4 _LineColor;\n"
                     "      uniform fixed4 _FillColor;\n"
                     "\n"
                     "      fixed4 frag (g2f i) : SV_Target\n"
                     "      {\n"
                     "        float minDistanceToEdge = min(i.dist[0], min(i.dist[1], i.dist[2])) * i.dist[3];\n"
                     "\n"
                     "        // Early out if we know we are not on a line segment.\n"
                     "        if(minDistanceToEdge > 0.9)\n"
                     "        {\n"
                     "            #ifdef USEDISCARD_ON\n"
                     "          discard;\n"
                     "          #else\n"
                     "          return _FillColor;\n"
                     "          #endif\n"
                     "        }\n"
                     "\n"
                     "        return _LineColor;\n"
                     "      }\n"
                     "      ENDCG\n"
                     "    }\n"
                     "  }\n"
                     "}"; //ну эта залупа не работает, хотя я где-то видел что так делали, мб нужна версия юнити другая